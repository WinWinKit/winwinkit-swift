//
// UserRewardsExpired.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UserRewardsExpired: Codable, Hashable {

    /** The referral user basic rewards */
    public private(set) var basic: [UserBasicRewardExpired]
    /** The referral user credit rewards */
    public private(set) var credit: [UserCreditRewardExpired]
    /** The referral user offer code rewards */
    public private(set) var offerCode: [UserOfferCodeRewardExpired]
    /** The referral user RevenueCat entitlement rewards */
    public private(set) var revenuecatEntitlement: [UserRevenueCatEntitlementRewardExpired]
    /** The referral user RevenueCat offering rewards */
    public private(set) var revenuecatOffering: [UserRevenueCatOfferingRewardExpired]

    public init(basic: [UserBasicRewardExpired], credit: [UserCreditRewardExpired], offerCode: [UserOfferCodeRewardExpired], revenuecatEntitlement: [UserRevenueCatEntitlementRewardExpired], revenuecatOffering: [UserRevenueCatOfferingRewardExpired]) {
        self.basic = basic
        self.credit = credit
        self.offerCode = offerCode
        self.revenuecatEntitlement = revenuecatEntitlement
        self.revenuecatOffering = revenuecatOffering
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case basic
        case credit
        case offerCode = "offer_code"
        case revenuecatEntitlement = "revenuecat_entitlement"
        case revenuecatOffering = "revenuecat_offering"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(basic, forKey: .basic)
        try container.encode(credit, forKey: .credit)
        try container.encode(offerCode, forKey: .offerCode)
        try container.encode(revenuecatEntitlement, forKey: .revenuecatEntitlement)
        try container.encode(revenuecatOffering, forKey: .revenuecatOffering)
    }
}

