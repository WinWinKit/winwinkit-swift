//
// Program.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Program: Codable, Hashable {

    /** The program id */
    public private(set) var id: String
    /** The program name */
    public private(set) var name: String
    /** The program description */
    public private(set) var description: String?
    /** The program metadata */
    public private(set) var metadata: AnyCodable?
    /** The program distribution percentage */
    public private(set) var distributionPercentage: Int
    /** The program limit */
    public private(set) var limit: Int
    /** The program rewards */
    public private(set) var rewards: ProgramRewards
    /** The program created at */
    public private(set) var createdAt: Date
    /** The program updated at */
    public private(set) var updatedAt: Date?

    public init(id: String, name: String, description: String?, metadata: AnyCodable?, distributionPercentage: Int, limit: Int, rewards: ProgramRewards, createdAt: Date, updatedAt: Date?) {
        self.id = id
        self.name = name
        self.description = description
        self.metadata = metadata
        self.distributionPercentage = distributionPercentage
        self.limit = limit
        self.rewards = rewards
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case metadata
        case distributionPercentage = "distribution_percentage"
        case limit
        case rewards
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(metadata, forKey: .metadata)
        try container.encode(distributionPercentage, forKey: .distributionPercentage)
        try container.encode(limit, forKey: .limit)
        try container.encode(rewards, forKey: .rewards)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Program: Identifiable {}
