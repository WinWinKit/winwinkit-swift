//
// ReferralProgramReceiverRewards.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReferralProgramReceiverRewards: Codable, Hashable {

    /** The program basic rewards */
    public private(set) var basic: [ReferralProgramReceiverBasicReward]
    /** The program credit rewards */
    public private(set) var credit: [ReferralProgramReceiverCreditReward]
    /** The program offer code rewards */
    public private(set) var offerCode: [ReferralProgramReceiverOfferCodeReward]
    /** The program Google Play promo code rewards */
    public private(set) var googleplayPromoCode: [ReferralProgramReceiverGooglePlayPromoCodeReward]
    /** The program RevenueCat entitlement rewards */
    public private(set) var revenuecatEntitlement: [ReferralProgramReceiverRevenueCatEntitlementReward]
    /** The program RevenueCat offering rewards */
    public private(set) var revenuecatOffering: [ReferralProgramReceiverRevenueCatOfferingReward]

    public init(basic: [ReferralProgramReceiverBasicReward], credit: [ReferralProgramReceiverCreditReward], offerCode: [ReferralProgramReceiverOfferCodeReward], googleplayPromoCode: [ReferralProgramReceiverGooglePlayPromoCodeReward], revenuecatEntitlement: [ReferralProgramReceiverRevenueCatEntitlementReward], revenuecatOffering: [ReferralProgramReceiverRevenueCatOfferingReward]) {
        self.basic = basic
        self.credit = credit
        self.offerCode = offerCode
        self.googleplayPromoCode = googleplayPromoCode
        self.revenuecatEntitlement = revenuecatEntitlement
        self.revenuecatOffering = revenuecatOffering
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case basic
        case credit
        case offerCode = "offer_code"
        case googleplayPromoCode = "googleplay_promo_code"
        case revenuecatEntitlement = "revenuecat_entitlement"
        case revenuecatOffering = "revenuecat_offering"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(basic, forKey: .basic)
        try container.encode(credit, forKey: .credit)
        try container.encode(offerCode, forKey: .offerCode)
        try container.encode(googleplayPromoCode, forKey: .googleplayPromoCode)
        try container.encode(revenuecatEntitlement, forKey: .revenuecatEntitlement)
        try container.encode(revenuecatOffering, forKey: .revenuecatOffering)
    }
}

