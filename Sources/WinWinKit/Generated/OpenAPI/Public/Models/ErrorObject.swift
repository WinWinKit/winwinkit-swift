//
// ErrorObject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Error Object */
public struct ErrorObject: Codable, Hashable {

    public private(set) var code: String
    public private(set) var status: Double
    public private(set) var message: String
    public private(set) var source: String?

    public init(code: String, status: Double, message: String, source: String?) {
        self.code = code
        self.status = status
        self.message = message
        self.source = source
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case status
        case message
        case source
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(code, forKey: .code)
        try container.encode(status, forKey: .status)
        try container.encode(message, forKey: .message)
        try container.encode(source, forKey: .source)
    }
}

