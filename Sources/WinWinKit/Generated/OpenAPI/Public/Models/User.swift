//
// User.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct User: Codable, Hashable {

    /** The unique identifier of the user in your app. */
    public private(set) var appUserId: String
    /** The referral code of the user. */
    public private(set) var code: String?
    /** The preview link of the user. */
    public private(set) var previewLink: String?
    /** Whether the user is a premium user. */
    public private(set) var isPremium: Bool?
    /** The date when the user was first seen at. */
    public private(set) var firstSeenAt: Date?
    /** The date when the user was last seen at. */
    public private(set) var lastSeenAt: Date?
    /** The metadata of the user. */
    public private(set) var metadata: AnyCodable?
    /** The claim code eligibility of the user. */
    public private(set) var claimCodeEligibility: UserClaimCodeEligibility
    /** The stats of the user. */
    public private(set) var stats: UserStats
    /** The rewards of the user. */
    public private(set) var rewards: UserRewards
    /** The program of the user. */
    public private(set) var program: Program?

    public init(appUserId: String, code: String?, previewLink: String?, isPremium: Bool?, firstSeenAt: Date?, lastSeenAt: Date?, metadata: AnyCodable?, claimCodeEligibility: UserClaimCodeEligibility, stats: UserStats, rewards: UserRewards, program: Program?) {
        self.appUserId = appUserId
        self.code = code
        self.previewLink = previewLink
        self.isPremium = isPremium
        self.firstSeenAt = firstSeenAt
        self.lastSeenAt = lastSeenAt
        self.metadata = metadata
        self.claimCodeEligibility = claimCodeEligibility
        self.stats = stats
        self.rewards = rewards
        self.program = program
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case appUserId = "app_user_id"
        case code
        case previewLink = "preview_link"
        case isPremium = "is_premium"
        case firstSeenAt = "first_seen_at"
        case lastSeenAt = "last_seen_at"
        case metadata
        case claimCodeEligibility = "claim_code_eligibility"
        case stats
        case rewards
        case program
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(appUserId, forKey: .appUserId)
        try container.encode(code, forKey: .code)
        try container.encode(previewLink, forKey: .previewLink)
        try container.encode(isPremium, forKey: .isPremium)
        try container.encode(firstSeenAt, forKey: .firstSeenAt)
        try container.encode(lastSeenAt, forKey: .lastSeenAt)
        try container.encode(metadata, forKey: .metadata)
        try container.encode(claimCodeEligibility, forKey: .claimCodeEligibility)
        try container.encode(stats, forKey: .stats)
        try container.encode(rewards, forKey: .rewards)
        try container.encode(program, forKey: .program)
    }
}

