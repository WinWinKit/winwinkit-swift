//
// AppStoreOfferCode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The offer code */
public struct AppStoreOfferCode: Codable, Hashable {

    public enum OfferEligibility: String, Codable, CaseIterable {
        case stackWithIntroOffers = "STACK_WITH_INTRO_OFFERS"
        case replaceIntroOffers = "REPLACE_INTRO_OFFERS"
    }
    public enum Duration: String, Codable, CaseIterable {
        case threeDays = "THREE_DAYS"
        case oneWeek = "ONE_WEEK"
        case twoWeeks = "TWO_WEEKS"
        case oneMonth = "ONE_MONTH"
        case twoMonths = "TWO_MONTHS"
        case threeMonths = "THREE_MONTHS"
        case sixMonths = "SIX_MONTHS"
        case oneYear = "ONE_YEAR"
    }
    public enum OfferMode: String, Codable, CaseIterable {
        case payAsYouGo = "PAY_AS_YOU_GO"
        case payUpFront = "PAY_UP_FRONT"
        case freeTrial = "FREE_TRIAL"
    }
    /** The offer code id. */
    public private(set) var id: String
    /** The offer code name. */
    public private(set) var name: String
    /** The offer code customer eligibilities. */
    public private(set) var customerEligibilities: [String]
    /** The offer code offer eligibility. */
    public private(set) var offerEligibility: OfferEligibility
    /** The offer code duration. */
    public private(set) var duration: Duration
    /** The offer code offer mode. */
    public private(set) var offerMode: OfferMode
    /** The offer code number of periods. */
    public private(set) var numberOfPeriods: Double
    /** The offer code prices. */
    public private(set) var prices: [AppStorePrice]?

    public init(id: String, name: String, customerEligibilities: [String], offerEligibility: OfferEligibility, duration: Duration, offerMode: OfferMode, numberOfPeriods: Double, prices: [AppStorePrice]?) {
        self.id = id
        self.name = name
        self.customerEligibilities = customerEligibilities
        self.offerEligibility = offerEligibility
        self.duration = duration
        self.offerMode = offerMode
        self.numberOfPeriods = numberOfPeriods
        self.prices = prices
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case customerEligibilities = "customer_eligibilities"
        case offerEligibility = "offer_eligibility"
        case duration
        case offerMode = "offer_mode"
        case numberOfPeriods = "number_of_periods"
        case prices
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(customerEligibilities, forKey: .customerEligibilities)
        try container.encode(offerEligibility, forKey: .offerEligibility)
        try container.encode(duration, forKey: .duration)
        try container.encode(offerMode, forKey: .offerMode)
        try container.encode(numberOfPeriods, forKey: .numberOfPeriods)
        try container.encode(prices, forKey: .prices)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AppStoreOfferCode: Identifiable {}
