//
// UserCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct UserCreateRequest: Codable, Hashable {

    /** The unique identifier of the referral user in your app. */
    public private(set) var appUserId: String
    /** Whether the user is a premium user. */
    public private(set) var isPremium: Bool?
    /** The date when the user was first seen at. */
    public private(set) var firstSeenAt: Date?
    /** The date when the user was last seen at. Deprecated and will be removed in the future. */
    @available(*, deprecated, message: "This property is deprecated.")
    public private(set) var lastSeenAt: Date?
    /** The metadata of the user. */
    public private(set) var metadata: AnyCodable?

    public init(appUserId: String, isPremium: Bool? = nil, firstSeenAt: Date? = nil, lastSeenAt: Date? = nil, metadata: AnyCodable? = nil) {
        self.appUserId = appUserId
        self.isPremium = isPremium
        self.firstSeenAt = firstSeenAt
        self.lastSeenAt = lastSeenAt
        self.metadata = metadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case appUserId = "app_user_id"
        case isPremium = "is_premium"
        case firstSeenAt = "first_seen_at"
        case lastSeenAt = "last_seen_at"
        case metadata
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(appUserId, forKey: .appUserId)
        try container.encodeIfPresent(isPremium, forKey: .isPremium)
        try container.encodeIfPresent(firstSeenAt, forKey: .firstSeenAt)
        try container.encodeIfPresent(lastSeenAt, forKey: .lastSeenAt)
        try container.encodeIfPresent(metadata, forKey: .metadata)
    }
}

