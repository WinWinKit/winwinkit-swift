//
// UsersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class UsersAPI {

    /**
     Create or Update User
     
     - parameter xApiKey: (header) The API key to authenticate with. 
     - parameter userCreateRequest: (body)  
     - returns: UserResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func createOrUpdateUser(xApiKey: String, userCreateRequest: UserCreateRequest) async throws -> UserResponse {
        return try await createOrUpdateUserWithRequestBuilder(xApiKey: xApiKey, userCreateRequest: userCreateRequest).execute().body
    }

    /**
     Create or Update User
     - POST /users
     - Create or update a user if already exists.
     - parameter xApiKey: (header) The API key to authenticate with. 
     - parameter userCreateRequest: (body)  
     - returns: RequestBuilder<UserResponse> 
     */
    internal class func createOrUpdateUserWithRequestBuilder(xApiKey: String, userCreateRequest: UserCreateRequest) -> RequestBuilder<UserResponse> {
        let localVariablePath = "/users"
        let localVariableURLString = WinWinKitAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: userCreateRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
            "x-api-key": xApiKey.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserResponse>.Type = WinWinKitAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get User
     
     - parameter appUserId: (path) The app user id of the user to retrieve. 
     - parameter xApiKey: (header) The API key to authenticate with. 
     - returns: UserResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUser(appUserId: String, xApiKey: String) async throws -> UserResponse {
        return try await getUserWithRequestBuilder(appUserId: appUserId, xApiKey: xApiKey).execute().body
    }

    /**
     Get User
     - GET /users/{app_user_id}
     - Retrieves a user by their app user id.
     - parameter appUserId: (path) The app user id of the user to retrieve. 
     - parameter xApiKey: (header) The API key to authenticate with. 
     - returns: RequestBuilder<UserResponse> 
     */
    internal class func getUserWithRequestBuilder(appUserId: String, xApiKey: String) -> RequestBuilder<UserResponse> {
        var localVariablePath = "/users/{app_user_id}"
        let appUserIdPreEscape = "\(APIHelper.mapValueToPathItem(appUserId))"
        let appUserIdPostEscape = appUserIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{app_user_id}", with: appUserIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = WinWinKitAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "x-api-key": xApiKey.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserResponse>.Type = WinWinKitAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
